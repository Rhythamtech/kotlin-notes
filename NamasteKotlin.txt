Kotlin: is a modern programming language that has gained popularity in recent years. It is designed to be concise, expressive, and interoperable with Java (it can use any Java library and run on any Java platform).
Kotlin can be used for various purposes, such as developing Android applications, building server-side systems, and creating multi-platform software.
Kotlin is also easy to learn for Java developers, as it has many similarities with Java syntax and features.

fun firstFunction(){
println("Namaste Kotlin")
}

When firstFunction() function call that prints "Namaste Kotlin" as output

fun printNamasteKotlin():String ="Namaste Kotlin Ist Way"

When printNamasteKotlin() function call that return "Namaste Kotlin" as String

There is an Alternative way to write above code :

fun printNamasteKotlin2ndWay():String{
return "Namaste Kotlin 2nd Way"
} 

OPERATORS

In the kotlin we have  -, +, /, *,% as operators
        + => Addition Operator
        - => Subtraction Operator
        * => Multiplication Operator
        / => Division
        % => Modulus (Return remainder)
        ++ => Incremental Operator ( add +1 in value)
        -- => Decremental ( subtract -1 in value)

fun main(){
        println(1 + 1) // Prints: 2
        println(53 - 3) // Prints: 50
        println(50 / 10) // Prints: 5
        println(1 / 2) // Prints: 0
        println(6 * 50) // Prints: 300

 In Kotlin, we also have the Extension Functions (For now , Consider this as a function who extend
 th feature of any Existing function without modifying the actual logic of the Function )
 Using that Extension function we can perform some basic operators .

        val num = 2
        println(num.times(6)) //(6*2) Prints: 12
        println(num.div(10.0)) //(2/10.0) Prints: 0.2
        println(num.plus(3)) //(3+2) Prints: 5
        println(num.minus(3)) //(2-3) Prints: -1


 You can use numbers(basic types) as if they were objects
 Use primitive 'int' as an object
                1.toLong() // 1
        println(false.not()) // true

}


